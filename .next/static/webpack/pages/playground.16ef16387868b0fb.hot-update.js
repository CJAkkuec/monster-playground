"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/playground",{

/***/ "./utils/monsterMaker.js":
/*!*******************************!*\
  !*** ./utils/monsterMaker.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid */ \"./node_modules/nanoid/index.browser.js\");\n\n\nfunction monsterMaker() {\n    function getImage() {\n        const colors = [\n            \"green\",\n            \"blue\",\n            \"yellow\",\n            \"purple\"\n        ];\n        const randomIndex = Math.floor(Math.random() * colors.length);\n        const monsterColor = colors[randomIndex];\n        let monsterSrc = \"\";\n        switch(monsterColor){\n            case \"green\":\n                {\n                    monsterSrc = \"./assets/monsters/green.gif\";\n                }\n                break;\n            case \"purple\":\n                {\n                    monsterSrc = \"./assets/monsters/purple.gif\";\n                }\n                break;\n            case \"blue\":\n                {\n                    monsterSrc = \"./assets/monsters/blue.gif\";\n                }\n                break;\n            case \"yellow\":\n                {\n                    monsterSrc = \"./assets/monsters/yellow.gif\";\n                }\n                break;\n            default:\n                break;\n        }\n        return monsterSrc;\n    }\n    const initialMonster = {\n        userId: (0,nanoid__WEBPACK_IMPORTED_MODULE_0__.nanoid)(),\n        name: \"baby\",\n        emote: null,\n        message: null,\n        iceCream: 0,\n        x: Math.floor(Math.random() * 900),\n        y: Math.floor(Math.random() * 900),\n        width: 100,\n        height: 100,\n        img: getImage()\n    };\n    return initialMonster;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (monsterMaker);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9tb25zdGVyTWFrZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFJZ0M7QUFDQTtBQUVoQyxTQUFTSSxlQUFlO0lBQ3RCLFNBQVNDLFdBQVc7UUFDbEIsTUFBTUMsU0FBUztZQUFDO1lBQVM7WUFBUTtZQUFVO1NBQVM7UUFDcEQsTUFBTUMsY0FBY0MsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxNQUFNLEtBQUtKLE9BQU9LLE1BQU07UUFDNUQsTUFBTUMsZUFBZU4sTUFBTSxDQUFDQyxZQUFZO1FBRXhDLElBQUlNLGFBQWE7UUFFakIsT0FBUUQ7WUFDTixLQUFLO2dCQUNIO29CQUNFQyxhQUFhO2dCQUNmO2dCQUNBLEtBQU07WUFDUixLQUFLO2dCQUNIO29CQUNFQSxhQUFhO2dCQUNmO2dCQUNBLEtBQU07WUFDUixLQUFLO2dCQUNIO29CQUNFQSxhQUFhO2dCQUNmO2dCQUNBLEtBQU07WUFDUixLQUFLO2dCQUNIO29CQUNFQSxhQUFhO2dCQUNmO2dCQUNBLEtBQU07WUFDUjtnQkFDRSxLQUFNO1FBQ1Y7UUFFQSxPQUFPQTtJQUNUO0lBRUEsTUFBTUMsaUJBQWlCO1FBQ3JCQyxRQUFRWiw4Q0FBTUE7UUFDZGEsTUFBTTtRQUNOQyxPQUFPLElBQUk7UUFDWEMsU0FBUyxJQUFJO1FBQ2JDLFVBQVU7UUFDVkMsR0FBR1osS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxNQUFNLEtBQUs7UUFDOUJXLEdBQUdiLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLO1FBQzlCWSxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsS0FBS25CO0lBQ1A7SUFFQSxPQUFPUztBQUNUO0FBRUEsK0RBQWVWLFlBQVlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvbW9uc3Rlck1ha2VyLmpzPzBhNjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgdW5pcXVlTmFtZXNHZW5lcmF0b3IsXG4gIGFkamVjdGl2ZXMsXG4gIGFuaW1hbHMsXG59IGZyb20gXCJ1bmlxdWUtbmFtZXMtZ2VuZXJhdG9yXCI7XG5pbXBvcnQgeyBuYW5vaWQgfSBmcm9tIFwibmFub2lkXCI7XG5cbmZ1bmN0aW9uIG1vbnN0ZXJNYWtlcigpIHtcbiAgZnVuY3Rpb24gZ2V0SW1hZ2UoKSB7XG4gICAgY29uc3QgY29sb3JzID0gW1wiZ3JlZW5cIiwgXCJibHVlXCIsIFwieWVsbG93XCIsIFwicHVycGxlXCJdO1xuICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY29sb3JzLmxlbmd0aCk7XG4gICAgY29uc3QgbW9uc3RlckNvbG9yID0gY29sb3JzW3JhbmRvbUluZGV4XTtcblxuICAgIGxldCBtb25zdGVyU3JjID0gXCJcIjtcblxuICAgIHN3aXRjaCAobW9uc3RlckNvbG9yKSB7XG4gICAgICBjYXNlIFwiZ3JlZW5cIjpcbiAgICAgICAge1xuICAgICAgICAgIG1vbnN0ZXJTcmMgPSBcIi4vYXNzZXRzL21vbnN0ZXJzL2dyZWVuLmdpZlwiO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInB1cnBsZVwiOlxuICAgICAgICB7XG4gICAgICAgICAgbW9uc3RlclNyYyA9IFwiLi9hc3NldHMvbW9uc3RlcnMvcHVycGxlLmdpZlwiO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImJsdWVcIjpcbiAgICAgICAge1xuICAgICAgICAgIG1vbnN0ZXJTcmMgPSBcIi4vYXNzZXRzL21vbnN0ZXJzL2JsdWUuZ2lmXCI7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwieWVsbG93XCI6XG4gICAgICAgIHtcbiAgICAgICAgICBtb25zdGVyU3JjID0gXCIuL2Fzc2V0cy9tb25zdGVycy95ZWxsb3cuZ2lmXCI7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gbW9uc3RlclNyYztcbiAgfVxuXG4gIGNvbnN0IGluaXRpYWxNb25zdGVyID0ge1xuICAgIHVzZXJJZDogbmFub2lkKCksXG4gICAgbmFtZTogXCJiYWJ5XCIsXG4gICAgZW1vdGU6IG51bGwsXG4gICAgbWVzc2FnZTogbnVsbCxcbiAgICBpY2VDcmVhbTogMCxcbiAgICB4OiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA5MDApLFxuICAgIHk6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDkwMCksXG4gICAgd2lkdGg6IDEwMCxcbiAgICBoZWlnaHQ6IDEwMCxcbiAgICBpbWc6IGdldEltYWdlKCksXG4gIH07XG5cbiAgcmV0dXJuIGluaXRpYWxNb25zdGVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtb25zdGVyTWFrZXI7XG4iXSwibmFtZXMiOlsidW5pcXVlTmFtZXNHZW5lcmF0b3IiLCJhZGplY3RpdmVzIiwiYW5pbWFscyIsIm5hbm9pZCIsIm1vbnN0ZXJNYWtlciIsImdldEltYWdlIiwiY29sb3JzIiwicmFuZG9tSW5kZXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJtb25zdGVyQ29sb3IiLCJtb25zdGVyU3JjIiwiaW5pdGlhbE1vbnN0ZXIiLCJ1c2VySWQiLCJuYW1lIiwiZW1vdGUiLCJtZXNzYWdlIiwiaWNlQ3JlYW0iLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwiaW1nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/monsterMaker.js\n"));

/***/ })

});